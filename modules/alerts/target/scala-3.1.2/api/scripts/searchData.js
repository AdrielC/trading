pages = [{"l":"index.html","n":"alerts","t":"alerts","d":"","k":"static"},
{"l":"trading/alerts.html","n":"trading.alerts","t":"package trading.alerts","d":"trading/alerts","k":"package"},
{"l":"trading/alerts/AlertsConfig.html","n":"AlertsConfig","t":"class AlertsConfig(httpPort: Port, pulsar: Config, redisUri: RedisURI, appId: AppId)","d":"trading/alerts/AlertsConfig","k":"class"},
{"l":"trading/alerts/Config$.html","n":"Config","t":"object Config","d":"trading/alerts/Config$","k":"object"},
{"l":"trading/alerts/Config$.html","n":"load","t":"def load[F[_]](using evidence$1: Async[F]): F[AlertsConfig]","d":"trading/alerts/Config$","k":"def"},
{"l":"trading/alerts/Engine$.html","n":"Engine","t":"object Engine","d":"trading/alerts/Engine$","k":"object"},
{"l":"trading/alerts/Engine$.html","n":"In","t":"type In = Msg[TradeEvent | SwitchEvent | PriceUpdate]","d":"trading/alerts/Engine$","k":"type"},
{"l":"trading/alerts/Engine$.html","n":"fsm","t":"def fsm[F[_]](appId: AppId, alertProducer: Producer[F, Alert], pricesProducer: Producer[F, PriceUpdate], pulsarTx: Resource[F, Txn], tradeAcker: Acker[F, TradeEvent], switchAcker: Acker[F, SwitchEvent], pricesAcker: Acker[F, PriceUpdate])(using evidence$1: GenUUID[F], evidence$2: Logger[F], evidence$3: MonadCancelThrow[F], evidence$4: Time[F]): FSM[F, TradeState, In, Unit]","d":"trading/alerts/Engine$","k":"def"},
{"l":"trading/alerts/Main$.html","n":"Main","t":"object Main extends Simple","d":"trading/alerts/Main$","k":"object"},
{"l":"trading/alerts/Main$.html","n":"altSettings","t":"val altSettings: Option[Settings[IO, Alert]]","d":"trading/alerts/Main$","k":"val"},
{"l":"trading/alerts/Main$.html","n":"compact","t":"val compact: Option[Settings[IO, SwitchEvent]]","d":"trading/alerts/Main$","k":"val"},
{"l":"trading/alerts/Main$.html","n":"priSettings","t":"val priSettings: Option[Settings[IO, PriceUpdate]]","d":"trading/alerts/Main$","k":"val"},
{"l":"trading/alerts/Main$.html","n":"resources","t":"def resources: Resource[IO, (Resource[IO, Server], Consumer[IO, TradeEvent], Consumer[IO, SwitchEvent], Consumer[IO, PriceUpdate], SnapshotReader[IO], FSM[IO, TradeState, In, Unit])]","d":"trading/alerts/Main$","k":"def"},
{"l":"trading/alerts/Main$.html","n":"run","t":"def run: IO[Unit]","d":"trading/alerts/Main$","k":"def"},
{"l":"trading/alerts/Main$.html","n":"swSub","t":"def swSub(appId: AppId): Subscription","d":"trading/alerts/Main$","k":"def"},
{"l":"trading/alerts/Main$.html","n":"trSub","t":"def trSub(appId: AppId): Subscription","d":"trading/alerts/Main$","k":"def"},
{"l":"docs/index.html","n":"alerts","t":"alerts","d":"","k":"static"}];