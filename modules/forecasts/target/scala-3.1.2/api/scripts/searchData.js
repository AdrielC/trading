pages = [{"l":"index.html","n":"forecasts","t":"forecasts","d":"","k":"static"},
{"l":"trading/forecasts.html","n":"trading.forecasts","t":"package trading.forecasts","d":"trading/forecasts","k":"package"},
{"l":"trading/forecasts/Config$.html","n":"Config","t":"object Config","d":"trading/forecasts/Config$","k":"object"},
{"l":"trading/forecasts/Config$.html","n":"load","t":"def load[F[_] : Async]: F[ForecastsConfig]","d":"trading/forecasts/Config$","k":"def"},
{"l":"trading/forecasts/Engine.html","n":"Engine","t":"trait Engine[F[_]]","d":"trading/forecasts/Engine","k":"trait"},
{"l":"trading/forecasts/Engine.html","n":"run","t":"def run: Msg[ForecastCommand] => F[Unit]","d":"trading/forecasts/Engine","k":"def"},
{"l":"trading/forecasts/Engine$.html","n":"Engine","t":"object Engine","d":"trading/forecasts/Engine$","k":"object"},
{"l":"trading/forecasts/Engine$.html","n":"make","t":"def make[F[_] : Time](authors: Producer[F, AuthorEvent], forecasts: Producer[F, ForecastEvent], atStore: AuthorStore[F], fcStore: ForecastStore[F], acker: Acker[F, ForecastCommand]): Engine[F]","d":"trading/forecasts/Engine$","k":"def"},
{"l":"trading/forecasts/ForecastsConfig.html","n":"ForecastsConfig","t":"class ForecastsConfig(httpPort: Port, pulsar: Config)","d":"trading/forecasts/ForecastsConfig","k":"class"},
{"l":"trading/forecasts/Main$.html","n":"Main","t":"object Main extends Simple","d":"trading/forecasts/Main$","k":"object"},
{"l":"trading/forecasts/Main$.html","n":"resources","t":"def resources: Resource[IO, (Resource[IO, Server], Consumer[IO, ForecastCommand], Engine[IO])]","d":"trading/forecasts/Main$","k":"def"},
{"l":"trading/forecasts/Main$.html","n":"run","t":"def run: IO[Unit]","d":"trading/forecasts/Main$","k":"def"},
{"l":"trading/forecasts/Main$.html","n":"settings","t":"def settings[A](name: String): Option[Settings[IO, A]]","d":"trading/forecasts/Main$","k":"def"},
{"l":"trading/forecasts/Main$.html","n":"sub","t":"val sub: Subscription","d":"trading/forecasts/Main$","k":"val"},
{"l":"trading/forecasts/store.html","n":"trading.forecasts.store","t":"package trading.forecasts.store","d":"trading/forecasts/store","k":"package"},
{"l":"trading/forecasts/store.html","n":"AuthorNotFound","t":"type AuthorNotFound = AuthorNotFound.type","d":"trading/forecasts/store","k":"type"},
{"l":"trading/forecasts/store.html","n":"DuplicateAuthorError","t":"type DuplicateAuthorError = DuplicateAuthorError.type","d":"trading/forecasts/store","k":"type"},
{"l":"trading/forecasts/store.html","n":"DuplicateForecastError","t":"type DuplicateForecastError = DuplicateForecastError.type","d":"trading/forecasts/store","k":"type"},
{"l":"trading/forecasts/store.html","n":"ForecastNotFound","t":"type ForecastNotFound = ForecastNotFound.type","d":"trading/forecasts/store","k":"type"},
{"l":"trading/forecasts/store.html","n":"SaveError","t":"type SaveError = DuplicateAuthorError | DuplicateForecastError | ForecastNotFound","d":"trading/forecasts/store","k":"type"},
{"l":"trading/forecasts/store.html","n":"onConstraintViolation","t":"def onConstraintViolation(err: Throwable)(implicit evidence$2: MonadThrow[F]): F[A]","d":"trading/forecasts/store","k":"def"},
{"l":"trading/forecasts/store.html","n":"onDuplicate","t":"def onDuplicate(err: Throwable)(implicit evidence$1: MonadThrow[F]): F[A]","d":"trading/forecasts/store","k":"def"},
{"l":"trading/forecasts/store.html","n":"onUpdateFailure","t":"def onUpdateFailure(err: Throwable)(implicit evidence$3: MonadThrow[F]): F[Unit]","d":"trading/forecasts/store","k":"def"},
{"l":"trading/forecasts/store/AuthorNotFound$.html","n":"AuthorNotFound","t":"object AuthorNotFound extends NoStackTrace","d":"trading/forecasts/store/AuthorNotFound$","k":"object"},
{"l":"trading/forecasts/store/AuthorStore.html","n":"AuthorStore","t":"trait AuthorStore[F[_]]","d":"trading/forecasts/store/AuthorStore","k":"trait"},
{"l":"trading/forecasts/store/AuthorStore.html","n":"fetch","t":"def fetch(id: AuthorId): F[Option[Author]]","d":"trading/forecasts/store/AuthorStore","k":"def"},
{"l":"trading/forecasts/store/AuthorStore.html","n":"save","t":"def save(author: Author): F[Either[SaveError, Unit]]","d":"trading/forecasts/store/AuthorStore","k":"def"},
{"l":"trading/forecasts/store/AuthorStore$.html","n":"AuthorStore","t":"object AuthorStore","d":"trading/forecasts/store/AuthorStore$","k":"object"},
{"l":"trading/forecasts/store/AuthorStore$.html","n":"from","t":"def from[F[_] : MonadCancelThrow](xa: Transactor[F]): AuthorStore[F]","d":"trading/forecasts/store/AuthorStore$","k":"def"},
{"l":"trading/forecasts/store/DB$.html","n":"DB","t":"object DB","d":"trading/forecasts/store/DB$","k":"object"},
{"l":"trading/forecasts/store/DB$.html","n":"init","t":"def init[F[_] : Async]: Resource[F, H2Transactor[F]]","d":"trading/forecasts/store/DB$","k":"def"},
{"l":"trading/forecasts/store/DuplicateAuthorError$.html","n":"DuplicateAuthorError","t":"object DuplicateAuthorError extends NoStackTrace","d":"trading/forecasts/store/DuplicateAuthorError$","k":"object"},
{"l":"trading/forecasts/store/DuplicateForecastError$.html","n":"DuplicateForecastError","t":"object DuplicateForecastError extends NoStackTrace","d":"trading/forecasts/store/DuplicateForecastError$","k":"object"},
{"l":"trading/forecasts/store/ForecastNotFound$.html","n":"ForecastNotFound","t":"object ForecastNotFound extends NoStackTrace","d":"trading/forecasts/store/ForecastNotFound$","k":"object"},
{"l":"trading/forecasts/store/ForecastStore.html","n":"ForecastStore","t":"trait ForecastStore[F[_]]","d":"trading/forecasts/store/ForecastStore","k":"trait"},
{"l":"trading/forecasts/store/ForecastStore.html","n":"castVote","t":"def castVote(fid: ForecastId, res: VoteResult): F[Either[ForecastNotFound, Unit]]","d":"trading/forecasts/store/ForecastStore","k":"def"},
{"l":"trading/forecasts/store/ForecastStore.html","n":"fetch","t":"def fetch(fid: ForecastId): F[Option[Forecast]]","d":"trading/forecasts/store/ForecastStore","k":"def"},
{"l":"trading/forecasts/store/ForecastStore.html","n":"save","t":"def save(aid: AuthorId, fc: Forecast): F[Either[AuthorNotFound, Unit]]","d":"trading/forecasts/store/ForecastStore","k":"def"},
{"l":"trading/forecasts/store/ForecastStore$.html","n":"ForecastStore","t":"object ForecastStore","d":"trading/forecasts/store/ForecastStore$","k":"object"},
{"l":"trading/forecasts/store/ForecastStore$.html","n":"from","t":"def from[F[_] : MonadCancelThrow](xa: Transactor[F]): ForecastStore[F]","d":"trading/forecasts/store/ForecastStore$","k":"def"},
{"l":"trading/forecasts/store/SQL$.html","n":"SQL","t":"object SQL","d":"trading/forecasts/store/SQL$","k":"object"},
{"l":"trading/forecasts/store/SQL$.html","n":"given_Meta_UUID","t":"given given_Meta_UUID: Meta[UUID]","d":"trading/forecasts/store/SQL$","k":"given"},
{"l":"trading/forecasts/store/SQL$.html","n":"given_Read_Author","t":"given given_Read_Author: Read[Author]","d":"trading/forecasts/store/SQL$","k":"given"},
{"l":"trading/forecasts/store/SQL$.html","n":"given_Read_Forecast","t":"given given_Read_Forecast: Read[Forecast]","d":"trading/forecasts/store/SQL$","k":"given"},
{"l":"trading/forecasts/store/SQL$.html","n":"insertAuthor","t":"val insertAuthor: Author => Update0","d":"trading/forecasts/store/SQL$","k":"val"},
{"l":"trading/forecasts/store/SQL$.html","n":"insertAuthorForecasts","t":"def insertAuthorForecasts(a: Author): ConnectionIO[Int]","d":"trading/forecasts/store/SQL$","k":"def"},
{"l":"trading/forecasts/store/SQL$.html","n":"insertForecast","t":"val insertForecast: Forecast => Update0","d":"trading/forecasts/store/SQL$","k":"val"},
{"l":"trading/forecasts/store/SQL$.html","n":"selectAuthor","t":"val selectAuthor: AuthorId => Query0[Author]","d":"trading/forecasts/store/SQL$","k":"val"},
{"l":"trading/forecasts/store/SQL$.html","n":"selectForecast","t":"val selectForecast: ForecastId => Query0[Forecast]","d":"trading/forecasts/store/SQL$","k":"val"},
{"l":"trading/forecasts/store/SQL$.html","n":"updateAuthorForecast","t":"def updateAuthorForecast(id: AuthorId, fid: ForecastId): Update0","d":"trading/forecasts/store/SQL$","k":"def"},
{"l":"trading/forecasts/store/SQL$.html","n":"updateVote","t":"def updateVote(id: ForecastId, res: VoteResult): Update0","d":"trading/forecasts/store/SQL$","k":"def"},
{"l":"docs/index.html","n":"forecasts","t":"forecasts","d":"","k":"static"}];